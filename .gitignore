import java.util.Scanner;

public class main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Player 1, What is your name? ");
        String p1 = scanner.next();
        System.out.println("Player 2, What is your name? ");
        String p2 = scanner.next();

        char[][] board = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                board[i][j] = '-';

            }

        }
        boolean isPlayer = true;
        boolean gameended = false;
        while (!gameended) {
            DrawBoard(board);


            char symbol = ' ';
            if (isPlayer) {
                symbol = 'X';
            } else {
                symbol = 'O';
            }

            if (isPlayer) {
                System.out.println(p1 + "'s turn(X)");
            } else {
                System.out.println(p2 + "'s turn(O)");
            }

            int row = 0;
            int col = 0;


            while (true) {
                System.out.println("enter a row (0,1 or 2): ");
                row = scanner.nextInt();
                System.out.println("enter a col (0,1 or 2): ");
                col = scanner.nextInt();
                if (row < 0 || col < 0 || row > 2 || col > 2) {
                    System.out.println("row and cal are out of bounds! ");
                } else if (board[row][col] != '-') {
                    System.out.println("someone had already made a move there! ");
                } else {
                    break;
                }
            }
            board[row][col] = symbol;
            if (haswon(board) == 'X') {
                System.out.println(p1 + "has won");
                gameended=true;
            } else if (haswon(board) == 'O') {
                System.out.println(p2 + "has won");
                gameended=true;
            } else {
                if (hastied(board)) {
                    System.out.println("its a tie! ");
                    gameended=true;
                } else {
                    isPlayer=! isPlayer;
                }
            }
        }

        DrawBoard(board);
    }

    public static void DrawBoard(char[][] board) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print(board[i][j]);

            }
            System.out.println();

        }

    }

    public static char haswon(char[][] board) {
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != '-') {
                return board[i][0];
            }
        }
        for (int j = 0; j < 3; j++) {
            if (board[0][j] == board[1][j] && board[1][j] == board[2][j] && board[2][j] != '-') {
                return board[0][j];
            }
        }
        if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != '-') {
            return board[0][0];
        }
        if (board[2][0] == board[1][1] && board[1][1] == board[0][2] && board[2][0] != '-') {
            return board[2][0];
        }
        return '-';
    }

    public static boolean hastied(char[][] board) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i][j] == '-') {
                    return false;
                }
            }
        }
        return true;
    }
}
